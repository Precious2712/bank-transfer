import type { Metadata } from "next";
import { Geist, Geist_Mono, Lora, Bitcount_Single, Nunito } from "next/font/google";
import { Toaster } from "@/components/ui/sonner";
import "./globals.css";
import { AppProvider } from "@/components/useContext/useContext";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const lora = Lora({
  variable: "--font-lora",
  subsets: ["latin"],
});

const bitCount = Bitcount_Single({
  variable: "--font-bit-count",
  subsets: ["latin"]
});

const nunito = Nunito({
  variable: "--font-nunito",
  subsets: ["latin"]
})

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

function ClientLayout({ children }: { children: React.ReactNode }) {
  return (
    <>
      <AppProvider>
        {children}
        <Toaster
          position="bottom-right"
          toastOptions={{
            className: 'font-sans',
            duration: 5000,
          }}
        />
      </AppProvider>

    </>
  );
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={
          `${geistSans.variable}
          ${lora.variable}
           ${geistMono.variable} antialiased
           ${bitCount.variable}
           ${nunito}
        `}
      >
        <ClientLayout>
          {children}
        </ClientLayout>
      </body>
    </html>
  );
}
